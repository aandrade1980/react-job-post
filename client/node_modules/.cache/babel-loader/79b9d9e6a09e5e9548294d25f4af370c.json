{"ast":null,"code":"import _defineProperty from \"/Users/alvaro.andrade/Documents/react-job-post/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/alvaro.andrade/Documents/react-job-post/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alvaro.andrade/Documents/react-job-post/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alvaro.andrade/Documents/react-job-post/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alvaro.andrade/Documents/react-job-post/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alvaro.andrade/Documents/react-job-post/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alvaro.andrade/Documents/react-job-post/client/src/components/NewJobPost.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './NewJobPost.scss';\n\nvar NewJobPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewJobPost, _Component);\n\n  function NewJobPost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewJobPost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewJobPost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: '',\n      description: ''\n    };\n\n    _this.submitJobPost = function (event) {\n      event.preventDefault();\n      var data = new FormData();\n      data.append('title', _this.state.title);\n      data.append('description', _this.state.description);\n      data.append('file', _this.uploadInput.files[0]);\n      fetch('/api/putJob', {\n        method: 'POST',\n        body: data\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res.success) {\n          _this.props.history.push('/');\n        } else {\n          console.log('Error: ', res.error);\n        }\n      });\n    };\n\n    _this.changeHandler = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    return _this;\n  }\n\n  _createClass(NewJobPost, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        onSubmit: this.submitJobPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Job Info\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Title:\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: this.state.title,\n        onChange: this.changeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Description:\"), React.createElement(\"textarea\", {\n        name: \"description\",\n        rows: \"4\",\n        cols: \"50\",\n        value: this.state.description,\n        onChange: this.changeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"PrintScreen: \"), React.createElement(\"input\", {\n        ref: function ref(_ref) {\n          _this2.uploadInput = _ref;\n        },\n        type: \"file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Send this!\"))));\n    }\n  }]);\n\n  return NewJobPost;\n}(Component);\n\nexport default withRouter(NewJobPost);","map":{"version":3,"sources":["/Users/alvaro.andrade/Documents/react-job-post/client/src/components/NewJobPost.js"],"names":["React","Component","withRouter","NewJobPost","state","title","description","submitJobPost","event","preventDefault","data","FormData","append","uploadInput","files","fetch","method","body","then","res","json","success","props","history","push","console","log","error","changeHandler","target","name","value","setState","ref"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport './NewJobPost.scss';\n\nclass NewJobPost extends Component {\n  state = {\n    title: '',\n    description: '',\n  }\n\n  submitJobPost = event => {\n    event.preventDefault();\n    const data = new FormData();\n    data.append('title', this.state.title);\n    data.append('description', this.state.description);\n    data.append('file', this.uploadInput.files[0]);\n      \n    fetch('/api/putJob', {\n      method: 'POST',\n      body: data\n    }).then(res => res.json())\n      .then(res => {\n        if (res.success) {\n          this.props.history.push('/')\n        } else {\n          console.log('Error: ', res.error);\n          \n        }\n      });\n  }\n\n  changeHandler = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <form onSubmit={ this.submitJobPost }>\n        <fieldset>\n          <legend>Job Info</legend>\n          <div>\n            <label htmlFor=\"title\">Title:</label>\n            <input \n              type=\"text\" \n              name=\"title\" \n              value={ this.state.title } \n              onChange={ this.changeHandler }\n            />\n          </div>\n          <div>\n            <label htmlFor=\"description\">Description:</label>\n            <textarea \n              name=\"description\" \n              rows=\"4\" \n              cols=\"50\"\n              value={ this.state.description } \n              onChange={ this.changeHandler }\n            />\n          </div>\n          <div>\n            <label>PrintScreen: </label>\n            <input \n              ref={ (ref) => { this.uploadInput = ref }} \n              type=\"file\" \n            />\n          </div>\n          <div className=\"button\">\n            <button type=\"submit\">Send this!</button>\n          </div>\n        </fieldset>\n      </form>\n    )\n  }\n}\n\nexport default withRouter(NewJobPost);\n"]},"metadata":{},"sourceType":"module"}